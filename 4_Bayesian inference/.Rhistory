n_mac = 1146
n_win = 1113
n = n_mac + n_win
n_mac_failed = 1
n_win_failed = 4
Ps = (n - (n_win_failed + n_mac_failed)) / n
Pf = 1 - Ps
print(paste('Proportion of successfull tests:', toString(Ps)))
print(paste('Proportion of falied tests:', toString(Pf)))
SE = sqrt((Ps * Pf) / n)
Z = abs(qnorm(0.025)) # 95% two tails
ME = Z * SE
print(paste('95% CI for successes: (', Ps - ME, ', ', Ps + ME, ')'))
print(paste('95% CI for failures: (', Pf - ME, ', ', Pf + ME, ')'))
P_n_k = choose(2, 2) * (Pf ^ 2) * (Ps ^ (2 - 2))
print(paste('Probability of 2 failures in row: ', format(P_n_k, scientific = F)))
print(paste('Probability of 2 failures in row (using R): ', format(dbinom(2, size = 2, p = Pf), scientific = F)))
sim_size = 10000
Ps_mac = 1
Ps_win = (n_win - n_win_failed) / n_win
print(Ps_win * sim_size)
test = factor(c(rep("mac", Ps_mac * sim_size), rep("win", Ps_win*sim_size)), levels = c("mac", "win"))
inference(test, est = "proportion", type = "ht", method = "simulation", success = "mac", null = .5, alternative = "twosided")
n_mac = 1146
n_win = 1113
n = n_mac + n_win
n_mac_failed = 0
n_win_failed = 2
Ps = (n - (n_win_failed + n_mac_failed)) / n
Pf = 1 - Ps
print(paste('Proportion of successfull tests:', toString(Ps)))
print(paste('Proportion of falied tests:', toString(Pf)))
SE = sqrt((Ps * Pf) / n)
Z = abs(qnorm(0.025)) # 95% two tails
ME = Z * SE
print(paste('95% CI for successes: (', Ps - ME, ', ', Ps + ME, ')'))
print(paste('95% CI for failures: (', Pf - ME, ', ', Pf + ME, ')'))
P_n_k = choose(2, 2) * (Pf ^ 2) * (Ps ^ (2 - 2))
print(paste('Probability of 2 failures in row: ', format(P_n_k, scientific = F)))
print(paste('Probability of 2 failures in row (using R): ', format(dbinom(2, size = 2, p = Pf), scientific = F)))
sim_size = 10000
Ps_mac = 1
Ps_win = (n_win - n_win_failed) / n_win
print(Ps_win * sim_size)
test = factor(c(rep("mac", Ps_mac * sim_size), rep("win", Ps_win*sim_size)), levels = c("mac", "win"))
inference(test, est = "proportion", type = "ht", method = "simulation", success = "mac", null = .5, alternative = "twosided")
n_mac = 382
n_win = 371
n = n_mac + n_win
n_mac_failed = 0
n_win_failed = 3
Ps = (n - (n_win_failed + n_mac_failed)) / n
Pf = 1 - Ps
print(paste('Proportion of successfull tests:', toString(Ps)))
print(paste('Proportion of falied tests:', toString(Pf)))
SE = sqrt((Ps * Pf) / n)
Z = abs(qnorm(0.025)) # 95% two tails
ME = Z * SE
print(paste('95% CI for successes: (', Ps - ME, ', ', Ps + ME, ')'))
print(paste('95% CI for failures: (', Pf - ME, ', ', Pf + ME, ')'))
P_n_k = choose(2, 2) * (Pf ^ 2) * (Ps ^ (2 - 2))
print(paste('Probability of 2 failures in row: ', format(P_n_k, scientific = F)))
print(paste('Probability of 2 failures in row (using R): ', format(dbinom(2, size = 2, p = Pf), scientific = F)))
sim_size = 10000
Ps_mac = 1
Ps_win = (n_win - n_win_failed) / n_win
print(Ps_win * sim_size)
test = factor(c(rep("mac", Ps_mac * sim_size), rep("win", Ps_win*sim_size)), levels = c("mac", "win"))
inference(test, est = "proportion", type = "ht", method = "simulation", success = "mac", null = .5, alternative = "twosided")
dbinom(4, n = 20, .52)
dbinom(4, n = 20, p = .52)
dbinom(4, k = 20, p = .52)
dbinom?
exit
?dbinom
dbinom(4, size = 20, prob = .52)
dbinom(4, size = 20, prob = .5)
p = seq(from = 0.2, to = 0.8, by = 0.2)
prior = c(rep(0.12, 2), 0.52, c(rep(0.12, 2)))
likelihood = dbinom(3, size = 3, prob = p)
likelihood
numerator = prior * likelihood
numerator <- prior * likelihood
prior
likelihood
p
p = c(0.2, 0.4, 0.5, .6, .8)
prior = c(rep(0.12, 2), 0.52, c(rep(0.12, 2)))
likelihood = dbinom(3, size = 3, prob = p)
likelihood
numerator <- prior * likelihood
denominator = sum(nominator)
denominator = sum(numerator)
posterior = numerator / denominator
posterior
prior = c(rep(0.125, 2), 0.5, c(rep(0.125, 2)))
likelihood = dbinom(3, size = 3, prob = p)
numerator <- prior * likelihood
denominator = sum(numerator)
posterior = numerator / denominator
posterior
priors = c(0.125, 0.125 0.5 0.125 0125)
priors = c(0.125, 0.125, 0.5, 0.125, 0125,)
priors = c(0.125, 0.125, 0.5, 0.125, 0125)
p = c(0.2, 0.4, 0.5, 0.6, 0.8)
likelihood = dbinom(3, size = 3, p)
numerator = priors * likelihood
posterior = numerator / sum(numerator)
sum(posterior)
posterior
posterior[0]
posterior[1]
posterior[4] + posterior[5]
likelihood = dbinom(3, size = 3, p)
priors = c(0.125, 0.125, 0.5, 0.125, 0125)p = c(0.2, 0.4, 0.5, 0.6, 0.8)
> likelihood = dbinom(3, size = 3, p)
> numerator = priors * likelihood
> posterior = numerator / sum(numerator)
> sum(posterior)
priors = c(0.125, 0.125, 0.5, 0.125, 0125)
p = c(0.2, 0.4, 0.5, 0.6, 0.8)
likelihood = dbinom(3, size = 3, prob = p)
numerator = priors * likelihood
posterior = numerator / sum(numerator)
sum(posterior)
posterior
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
print(posterior)
print(posterior)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
dbinom(9942, size = 10000, p = 0.0993)
dbinom(9942, size = 10000, p = 0.993)
dbinom(9942, size = 10000, p = 0.9942)
dbinom(0:9942, size = 10000, p = 0.5)
sum(dbinom(0:9942, size = 10000, p = 0.5))
sum(dbinom(9930:9942, size = 10000, p = 0.5))
sum(dbinom(9930:9942, size = 10000, p = 0.993))
sum(dbinom(9930:9942, size = 10000, p = 0.5))
sum(dbinom(0:9942, size = 10000, p = 0.5))
sum(dbinom(0:9942, size = 10000, prob = 0.5))
sum(dbinom(9930:9942, size = 10000, prob = 0.5))
sum(dbinom(9930:9942, size = 10000, prob = 0.993))
posterior
source('~/.active-rstudio-document', echo=TRUE)
sum(dbinom(9942, size = 10000, prob = 0.993))
sum(dbinom(9942, size = 10000, prob = 0.993)) / 2
sum(dbinom(9942:10000, size = 10000, prob = 0.993))
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
dbinom(5, size = 300, prob = 0.01)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
dbinom(5, size = 300, prob = 0.01)
?pnorm
pnorm(1.16, mean = 0.0166667, sd = 0.00574, lower.tail = FALSE)
qnorm(1.16, mean = 0.0166667, sd = 0.00574, lower.tail = FALSE)
pnorm(1.16, mean = 0.0166667, sd = 0.00574, lower.tail = FALSE)
pnorm(1.16)
dbinom(5, size = 300, prob = 0.01)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
dbinom(5:300, size = 300, prob = 0.01)
source('~/.active-rstudio-document', echo=TRUE)
sum(dbinom(5:300, size = 300, prob = 0.01))
suppressMessages(library(magrittr))
suppressMessages(library(statsr))
suppressMessages(library(magrittr))
suppressMessages(library(statsr))
bandit_sim()
data = data.frame(machine = c(1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L,
1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L,
2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L,
2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L),
outcome = c("L", "W", "W", "W", "L", "L", "L", "W", "W", "L",
"L", "W", "W", "W", "W", "L", "W", "L", "L", "L",
"W", "L", "L", "W", "L", "L", "L", "W", "L", "W",
"L", "L", "W", "L", "L", "L", "W", "W", "L", "W"))
plot_bandit_posterior(data)
bandit_sim()
suppressMessages(library(magrittr))
suppressMessages(library(statsr))
install_github("StatsWithR/statsr")
install.packages("dplyr")
install.packages("ggplot2")
install.packages("shiny")
install.packages("ggplot2")
install.packages("shiny")
install.packages("shiny")
install.packages("devtools")
library(devtools)
install_github("StatsWithR/statsr")
install.packages("dplyr")
install.packages("ggplot2")
install.packages("shiny")
library(statsr)
library(dplyr)
library(ggplot2)
library(shiny)
suppressMessages(library(magrittr))
suppressMessages(library(statsr))
suppressMessages(library(magrittr))
suppressMessages(library(statsr))
bandit_sim()
bandit_sim()
install.packages("devtools")
install.packages("rsconnect")
install.packages("devtools")
install.packages("devtools")
library(devtools)
install.packages("rsconnect")
library(rsconnect)
suppressMessages(library(magrittr))
suppressMessages(library(statsr))
bandit_sim()
suppressMessages(library(magrittr))
suppressMessages(library(statsr))
suppressMessages(library(magrittr))
suppressMessages(library(statsr))
suppressMessages(library(magrittr))
suppressMessages(library(statsr))
bandit_sim()
bandit_sim()
bandit_sim()
bandit_posterior(data = data.frame(machine=1L, outcome="W"))
bandit_posterior(data = data.frame(machine=c(1L,1L), outcome=c("W","L")))
data1 = data.frame(machine=c(1L), outcome=c("W"))
data2 = data.frame(machine=c(1L), outcome=c("L"))
bandit_posterior(data1) %>% bandit_posterior(data2, prior=.)
data1 = data.frame(machine=c(1L), outcome=c("W"))
data2 = data.frame(machine=c(1L), outcome=c("L"))
bandit_posterior(data1) %>% bandit_posterior(data2, prior=.)
data1 = data.frame(machine=c(1L), outcome=c("W"))
data2 = data.frame(machine=c(1L), outcome=c("L"))
bandit_posterior(data1) %>% bandit_posterior(data2, prior=.)
bandit_posterior(data2, prior=bandit_posterior(data1))
data1 = data.frame(machine=c(1L), outcome=c("W"))
data2 = data.frame(machine=c(1L), outcome=c("L"))
#bandit_posterior(data1) %>% bandit_posterior(data2, prior=.)
bandit_posterior(data2, prior=bandit_posterior(data1))
bandit_posterior(data = data.frame(machine=c(1L,1L), outcome=c("W","L")))
data1 = data.frame(machine=c(1L), outcome=c("W"))
data2 = data.frame(machine=c(1L), outcome=c("L"))
bandit_posterior(data1) %>% bandit_posterior(data2, prior=.)
m1_p1 = data.frame(machine=c(1L), outcome=c("W"))
m1_p2 = data.frame(machine=c(1L), outcome=c("W"))
posteriors_m1 = bandit_posterior(m1_p2, prior=bandit_posterior(m1_p1))
m1_p1 = data.frame(machine=c(1L), outcome=c("W"))
m1_p2 = data.frame(machine=c(1L), outcome=c("W"))
posteriors_m1 = bandit_posterior(m1_p2, prior=bandit_posterior(m1_p1))
m2_p1 = data.frame(machine=c(2L), outcome=c("W"))
m2_p2 = data.frame(machine=c(2L), outcome=c("W"))
m2_p3 = data.frame(machine=c(2L), outcome=c("L"))
posteriors_m2_1 = bandit_posterior(m2_p1, prior=posteriors_m1)
posteriors_m2_2 = bandit_posterior(m2_p2, prior=posteriors_m2_1)
posteriors_m2_3 = bandit_posterior(m2_p3, prior=posteriors_m2_2)
m1_p1 = data.frame(machine=c(1L), outcome=c("W"))
m1_p2 = data.frame(machine=c(1L), outcome=c("W"))
posteriors_m1 = bandit_posterior(m1_p2, prior=bandit_posterior(m1_p1))
m2_p1 = data.frame(machine=c(2L), outcome=c("W"))
m2_p2 = data.frame(machine=c(2L), outcome=c("W"))
m2_p3 = data.frame(machine=c(2L), outcome=c("L"))
posteriors_m2_1 = bandit_posterior(m2_p1, prior=posteriors_m1)
posteriors_m2_2 = bandit_posterior(m2_p2, prior=posteriors_m2_1)
posteriors_m2_3 = bandit_posterior(m2_p3, prior=posteriors_m2_2)
posteriors_m2_3
data = data.frame(machine = c(1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L,
1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L,
2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L,
2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L),
outcome = c("L", "W", "W", "W", "L", "L", "L", "W", "W", "L",
"L", "W", "W", "W", "W", "L", "W", "L", "L", "L",
"W", "L", "L", "W", "L", "L", "L", "W", "L", "W",
"L", "L", "W", "L", "L", "L", "W", "W", "L", "W"))
plot_bandit_posterior(data)
data = data.frame(machine = c(1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L,
1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L,
2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L,
2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L),
outcome = c("L", "W", "W", "W", "L", "L", "L", "W", "W", "L",
"L", "W", "W", "W", "W", "L", "W", "L", "L", "L",
"W", "L", "L", "W", "L", "L", "L", "W", "L", "W",
"L", "L", "W", "L", "L", "L", "W", "W", "L", "W"))
plot_bandit_posterior(data)
data = data.frame(machine = c(1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L,
1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L,
2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L,
2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L),
outcome = c("L", "W", "W", "W", "L", "L", "L", "W", "W", "L",
"L", "W", "W", "W", "W", "L", "W", "L", "L", "L",
"W", "L", "L", "W", "L", "L", "L", "W", "L", "W",
"L", "L", "W", "L", "L", "L", "W", "W", "L", "W"))
plot_bandit_posterior(data)
data = data.frame(machine = c(1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L,
1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L,
2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L,
2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L),
outcome = c("L", "W", "W", "W", "L", "L", "L", "W", "W", "L",
"L", "W", "W", "W", "W", "L", "W", "L", "L", "L",
"W", "L", "L", "W", "L", "L", "L", "W", "L", "W",
"L", "L", "W", "L", "L", "L", "W", "W", "L", "W"))
plot_bandit_posterior(data)
data = data.frame(machine = c(1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L,
1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L,
2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L,
2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L),
outcome = c("L", "W", "W", "W", "L", "L", "L", "W", "W", "L",
"L", "W", "W", "W", "W", "L", "W", "L", "L", "L",
"W", "L", "L", "W", "L", "L", "L", "W", "L", "W",
"L", "L", "W", "L", "L", "L", "W", "W", "L", "W"))
plot_bandit_posterior(data)
data = data.frame(machine = c(1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L,
1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L,
2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L,
2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L),
outcome = c("L", "W", "W", "W", "L", "L", "L", "W", "W", "L",
"L", "W", "W", "W", "W", "L", "W", "L", "L", "L",
"W", "L", "L", "W", "L", "L", "L", "W", "L", "W",
"L", "L", "W", "L", "L", "L", "W", "W", "L", "W"))
plot_bandit_posterior(data)
data = data.frame(machine = c(1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L,
1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L,
2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L,
2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L),
outcome = c("L", "W", "W", "W", "L", "L", "L", "W", "W", "L",
"L", "W", "W", "W", "W", "L", "W", "L", "L", "L",
"W", "L", "L", "W", "L", "L", "L", "W", "L", "W",
"L", "L", "W", "L", "L", "L", "W", "W", "L", "W"))
plot_bandit_posterior(data)
data = data.frame(machine = c(1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L,
1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L,
2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L,
2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L),
outcome = c("L", "W", "W", "W", "L", "L", "L", "W", "W", "L",
"L", "W", "W", "W", "W", "L", "W", "L", "L", "L",
"W", "L", "L", "W", "L", "L", "L", "W", "L", "W",
"L", "L", "W", "L", "L", "L", "W", "W", "L", "W"))
plot_bandit_posterior(data)
data = data.frame(machine = c(1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L,
1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L,
2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L,
2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L),
outcome = c("L", "W", "W", "W", "L", "L", "L", "W", "W", "L",
"L", "W", "W", "W", "W", "L", "W", "L", "L", "L",
"W", "L", "L", "W", "L", "L", "L", "W", "L", "W",
"L", "L", "W", "L", "L", "L", "W", "W", "L", "W"))
plot_bandit_posterior(data)
data = data.frame(machine = c(1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L,
1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L,
2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L,
2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L),
outcome = c("L", "W", "W", "W", "L", "L", "L", "W", "W", "L",
"L", "W", "W", "W", "W", "L", "W", "L", "L", "L",
"W", "L", "L", "W", "L", "L", "L", "W", "L", "W",
"L", "L", "W", "L", "L", "L", "W", "W", "L", "W"))
plot_bandit_posterior(data)
data = data.frame(machine = c(1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L,
1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L,
2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L,
2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L),
outcome = c("L", "W", "W", "W", "L", "L", "L", "W", "W", "L",
"L", "W", "W", "W", "W", "L", "W", "L", "L", "L",
"W", "L", "L", "W", "L", "L", "L", "W", "L", "W",
"L", "L", "W", "L", "L", "L", "W", "W", "L", "W"))
plot_bandit_posterior(data)
data = data.frame(machine = c(1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L,
1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L,
2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L,
2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L),
outcome = c("L", "W", "W", "W", "L", "L", "L", "W", "W", "L",
"L", "W", "W", "W", "W", "L", "W", "L", "L", "L",
"W", "L", "L", "W", "L", "L", "L", "W", "L", "W",
"L", "L", "W", "L", "L", "L", "W", "W", "L", "W"))
plot_bandit_posterior(data)
data = data.frame(machine = c(1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L,
1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L,
2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L,
2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L),
outcome = c("L", "W", "W", "W", "L", "L", "L", "W", "W", "L",
"L", "W", "W", "W", "W", "L", "W", "L", "L", "L",
"W", "L", "L", "W", "L", "L", "L", "W", "L", "W",
"L", "L", "W", "L", "L", "L", "W", "W", "L", "W"))
plot_bandit_posterior(data)
bandit_sim()
data = data.frame(machine = c(1L, 2L, 1L, 2L, 1L, 2L, 1L, 2L, 1L, 2L, 1L, 2L, 1L, 2L, 1L, 2L, 1L, 2L, 1L, 2L, 1L, 2L, 1L, 2L, 1L, 2L, 1L, 2L, 1L, 2L, 1L, 2L, 1L, 2L, 1L, 2L, 1L, 2L, 1L, 2L, 1L, 2L, 1L, 2L, 1L, 2L, 1L, 2L, 1L, 2L), outcome = c("L", "L", "L", "W", "L", "W", "L", "W", "L", "W", "L", "W", "L", "W", "L", "W", "L", "L", "L", "L", "L", "L", "L", "L", "L", "W", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "W", "W", "L", "W", "W", "L", "W", "W", "L", "L", "W", "W", "L", "W"))
plot_bandit_posterior(data[1:10])
data = data.frame(machine = c(1L, 2L, 1L, 2L, 1L, 2L, 1L, 2L, 1L, 2L, 1L, 2L, 1L, 2L, 1L, 2L, 1L, 2L, 1L, 2L, 1L, 2L, 1L, 2L, 1L, 2L, 1L, 2L, 1L, 2L, 1L, 2L, 1L, 2L, 1L, 2L, 1L, 2L, 1L, 2L, 1L, 2L, 1L, 2L, 1L, 2L, 1L, 2L, 1L, 2L), outcome = c("L", "L", "L", "W", "L", "W", "L", "W", "L", "W", "L", "W", "L", "W", "L", "W", "L", "L", "L", "L", "L", "L", "L", "L", "L", "W", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "W", "W", "L", "W", "W", "L", "W", "W", "L", "L", "W", "W", "L", "W"))
plot_bandit_posterior(data[1:10,])
data = data.frame(machine = c(1L, 2L, 1L, 2L, 1L, 2L, 1L, 2L, 1L, 2L, 1L, 2L, 1L, 2L, 1L, 2L, 1L, 2L, 1L, 2L, 1L, 2L, 1L, 2L, 1L, 2L, 1L, 2L, 1L, 2L, 1L, 2L, 1L, 2L, 1L, 2L, 1L, 2L, 1L, 2L, 1L, 2L, 1L, 2L, 1L, 2L, 1L, 2L, 1L, 2L), outcome = c("L", "L", "L", "W", "L", "W", "L", "W", "L", "W", "L", "W", "L", "W", "L", "W", "L", "L", "L", "L", "L", "L", "L", "L", "L", "W", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "W", "W", "L", "W", "W", "L", "W", "W", "L", "L", "W", "W", "L", "W"))
plot_bandit_posterior(data[1:10])
data = data.frame(machine = c(1L, 2L, 1L, 2L, 1L, 2L, 1L, 2L, 1L, 2L, 1L, 2L, 1L, 2L, 1L, 2L, 1L, 2L, 1L, 2L, 1L, 2L, 1L, 2L, 1L, 2L, 1L, 2L, 1L, 2L, 1L, 2L, 1L, 2L, 1L, 2L, 1L, 2L, 1L, 2L, 1L, 2L, 1L, 2L, 1L, 2L, 1L, 2L, 1L, 2L), outcome = c("L", "L", "L", "W", "L", "W", "L", "W", "L", "W", "L", "W", "L", "W", "L", "W", "L", "L", "L", "L", "L", "L", "L", "L", "L", "W", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "W", "W", "L", "W", "W", "L", "W", "W", "L", "L", "W", "W", "L", "W"))
plot_bandit_posterior(data[1:10,])
data = data.frame(machine = c(1L, 2L, 1L, 2L, 1L, 2L, 1L, 2L, 1L, 2L, 1L, 2L, 1L, 2L, 1L, 2L, 1L, 2L, 1L, 2L, 1L, 2L, 1L, 2L, 1L, 2L, 1L, 2L, 1L, 2L, 1L, 2L, 1L, 2L, 1L, 2L, 1L, 2L, 1L, 2L, 1L, 2L, 1L, 2L, 1L, 2L, 1L, 2L, 1L, 2L), outcome = c("L", "L", "L", "W", "L", "W", "L", "W", "L", "W", "L", "W", "L", "W", "L", "W", "L", "L", "L", "L", "L", "L", "L", "L", "L", "W", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "W", "W", "L", "W", "W", "L", "W", "W", "L", "L", "W", "W", "L", "W"))
plot_bandit_posterior(data[1:10,])
data = data.frame(machine = c(1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L,
1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L,
2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L,
2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L),
outcome = c("L", "W", "W", "W", "L", "L", "L", "W", "W", "L",
"L", "W", "W", "W", "W", "L", "W", "L", "L", "L",
"W", "L", "L", "W", "L", "L", "L", "W", "L", "W",
"L", "L", "W", "L", "L", "L", "W", "W", "L", "W"))
plot_bandit_posterior(data)
suppressMessages(library(magrittr))
suppressMessages(library(statsr))
bandit_sim()
bandit_posterior(data = data.frame(machine=1L, outcome="W"))
bandit_posterior(data = data.frame(machine=c(1L,1L), outcome=c("W","L")))
data1 = data.frame(machine=c(1L), outcome=c("W"))
data2 = data.frame(machine=c(1L), outcome=c("L"))
bandit_posterior(data1) %>% bandit_posterior(data2, prior=.)
m1_p1 = data.frame(machine=c(1L), outcome=c("W"))
m1_p2 = data.frame(machine=c(1L), outcome=c("W"))
posteriors_m1 = bandit_posterior(m1_p2, prior=bandit_posterior(m1_p1))
m2_p1 = data.frame(machine=c(2L), outcome=c("W"))
m2_p2 = data.frame(machine=c(2L), outcome=c("W"))
m2_p3 = data.frame(machine=c(2L), outcome=c("L"))
posteriors_m2_1 = bandit_posterior(m2_p1, prior=posteriors_m1)
posteriors_m2_2 = bandit_posterior(m2_p2, prior=posteriors_m2_1)
posteriors_m2_3 = bandit_posterior(m2_p3, prior=posteriors_m2_2)
posteriors_m2_3
data = data.frame(machine = c(1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L,
1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L,
2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L,
2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L),
outcome = c("L", "W", "W", "W", "L", "L", "L", "W", "W", "L",
"L", "W", "W", "W", "W", "L", "W", "L", "L", "L",
"W", "L", "L", "W", "L", "L", "L", "W", "L", "W",
"L", "L", "W", "L", "L", "L", "W", "W", "L", "W"))
plot_bandit_posterior(data)
data = data.frame(machine = c(1L, 2L, 1L, 2L, 1L, 2L, 1L, 2L, 1L, 2L, 1L, 2L, 1L, 2L, 1L, 2L, 1L, 2L, 1L, 2L, 1L, 2L, 1L, 2L, 1L, 2L, 1L, 2L, 1L, 2L, 1L, 2L, 1L, 2L, 1L, 2L, 1L, 2L, 1L, 2L, 1L, 2L, 1L, 2L, 1L, 2L, 1L, 2L, 1L, 2L), outcome = c("L", "L", "L", "W", "L", "W", "L", "W", "L", "W", "L", "W", "L", "W", "L", "W", "L", "L", "L", "L", "L", "L", "L", "L", "L", "W", "L", "L", "L", "L", "L", "L", "L", "L", "L", "L", "W", "W", "L", "W", "W", "L", "W", "W", "L", "L", "W", "W", "L", "W"))
plot_bandit_posterior(data[1:10,])
